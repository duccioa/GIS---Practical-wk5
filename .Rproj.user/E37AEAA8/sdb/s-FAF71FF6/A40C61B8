{
    "contents" : "library(maptools)\nlibrary(rgdal)\nlibrary(rgeos)\nlibrary(ggmap)\nlibrary(sp)\nlibrary(plyr)\n\n#Load stations and wards\nwards <- readOGR(\"./LondonWards\", \"London_Ward_CityMerged\")\nproj4string(wards) <- CRS(\"+init=epsg:27700\")#assign correct name for British National Grid\nstations <- readOGR(\"./tube_shape\", \"TubeStations\")\nproj4string(stations) <- CRS(\"+init=epsg:4326\")#Assign correct name for wgs84\nstations <- spTransform(stations, CRS(\"+init=epsg:27700\"))#transform to British National Grid\n#List of line names\nline_list <- c(\"Bakerloo\", \"Central\", \"Circle\", \"District\", \"DLR\", \n               \"Hammersmith\", \"Jubilee\", \"Metropolitan\", \n               \"Northern\", \"Overground\", \"Piccadilly\", \n               \"Tramlink\", \"Victoria\", \"Waterloo\")\n#Load tube lines\nBakerloo <- readOGR(\"./tube_shape\", \"Bakerloo\")\nCentral <- readOGR(\"./tube_shape\", \"central_line\")\nCircle <- readOGR(\"./tube_shape\", \"Circle\")\nDistrict <- readOGR(\"./tube_shape\", \"District\")\nDLR <- readOGR(\"./tube_shape\", \"DLR\") \nHammersmith <- readOGR(\"./tube_shape\", \"Hammersmith and City\")\nJubilee <- readOGR(\"./tube_shape\", \"Jubilee\")\nMetropolitan <- readOGR(\"./tube_shape\", \"Metropolitan\")\nNorthern <- readOGR(\"./tube_shape\", \"Northern\")\nOverground <- readOGR(\"./tube_shape\", \"Overground\")\nPiccadilly <- readOGR(\"./tube_shape\", \"Piccadilly\")\nTramlink <- readOGR(\"./tube_shape\", \"Tramlink\")\nVictoria <- readOGR(\"./tube_shape\", \"Victoria\")\nWaterloo <- readOGR(\"./tube_shape\", \"Waterloo and City\")\n#Transform lines from wgs84 to British National Grid\nchange_CRS <- function(){\n    for(i in 1:length(line_list)){\n        line_name <- get(line_list[i])\n        proj4string(line_name) <- CRS(\"+init=epsg:4326\")\n        line_name <- spTransform(line_name, CRS(\"+init=epsg:27700\"))\n        assign(line_list[i], line_name, envir = .GlobalEnv)\n    }\n}\nchange_CRS()\n\n#Create list of RGB colours for tube lines\ntube_lines <- data.frame(Line_Name = line_list, R = 0, G = 0, B = 0, stringsAsFactors = FALSE)\ntube_lines[1, 2:4] <- c(137, 78, 36)#Bakerloo\ntube_lines[2, 2:4] <- c(220,36,31)#Central\ntube_lines[3, 2:4] <- c(255,206,0)#Circle\ntube_lines[4, 2:4] <- c(0,114,41)#District\ntube_lines[5, 2:4] <- c(0,175,173)#DLR\ntube_lines[6, 2:4] <- c(215, 153, 175)#Hammersmith\ntube_lines[7, 2:4] <- c(134, 143, 152)#Jubilee\ntube_lines[8, 2:4] <- c(117, 16, 86)#Metropolitan\ntube_lines[9, 2:4] <- c(0,0,0)#Northern\ntube_lines[10, 2:4] <- c(232,106,16)#Overground\ntube_lines[11, 2:4] <- c(0,25,168)#Piccadilly\ntube_lines[12, 2:4] <- c(0,189,25)#Tramlink\ntube_lines[13, 2:4] <- c(0,160,226)#Victoria\ntube_lines[14, 2:4] <- c(118, 208, 189)#Waterloo\ntube_lines[,2:4] <- tube_lines[,2:4]/255\ntube_lines <- data.frame(tube_lines, colour = rgb(tube_lines[,2:4]), stringsAsFactors = FALSE)\n\n#Plot\nplot(wards, lwd = 0.5)\nfor(i in 1:length(tube_lines$Line_Name)){\n    \n    lines(get(tube_lines$Line_Name[i]), lwd =  3, col = tube_lines$colour[i])\n}\npoints(stations, pch = 20, cex = 0.5, col = \"black\")\n#text(stations, label = stations@data$Name, cex = .3)\n\n\n\n#3 is the line's ID, 1 is the row of the coordinates x and y of the first point\nCentral@lines[[3]]@Lines[[1]]@coords[1,2]\n###FUNCTIONS###\n#Given a SpatialLinesDataFrame, calculate the length of the segment corresponding to the id\nseg_length <- function(line, id){\n    xx1 <- line@lines[[id]]@Lines[[1]]@coords[1,1]\n    xx2 <- line@lines[[id]]@Lines[[1]]@coords[2,1]\n    yy1 <- line@lines[[id]]@Lines[[1]]@coords[1,2]\n    yy2 <- line@lines[[id]]@Lines[[1]]@coords[2,2]\n    x1 <- min(xx1, xx2)\n    x2 <- max(xx1, xx2)\n    y1 <- min(yy1, yy2)\n    y2 <- max(yy1, yy2)\n    len <- sqrt((x2-x1)^2+(y2-y1)^2)\n    return(len)\n}\n#Given a patialLinesDataFrame, calculate the total length\nline_length <- function(line){\n    num_seg <- length(line@lines)\n    total_length <- 0\n    for(i in 1:num_seg){\n        total_length <- total_length + seg_length(line, i)\n    }\n    return(total_length)\n}\n\n####PRACTICE 5\n##question 1 - Whic is the longest tube line in the dataset?\n\nwhich_length <- function(list, rank){\n    x <- data.frame(Line = list, Length = rep(0, length(list)), stringsAsFactors = FALSE)\n    for(i in 1:length(list)){\n        x[i, 2] <- line_length(get(list[i]))\n    }\n    x <- x[order(-x$Length),]\n    return(data.frame(LongestLine = x[rank,1], Length = x[rank,2], Units = \"m\"))\n}\nwhich_length(line_list, 1)\n\n##Question 2 - How many stations on the Piccadilly\nPiccadilly_buffer <- gBuffer(Piccadilly, width = 0.0001)\nPiccadilly_stations <- stations[Piccadilly_buffer, ]\nsummary(Piccadilly_stations)\nplot(Piccadilly_buffer)\npoints(Piccadilly_stations, col = \"red\")\n##Question 3 - Average price along the wards of each line and which is the highest\ndownload.file(url = \"https://files.datapress.com/london/dataset/average-house-prices-ward-lsoa-msoa/house-prices-Wards.csv\",\n              dest = \"./house-prices-wards.csv\", method = \"curl\")\n#replace in excel \"(Â£)\" with \"_GBP_\" and \"-\" with \"\"\nhouse_prices_wards <- read.csv(\"./house-prices-wards.csv\", sep = \",\", stringsAsFactors = FALSE)\nnames(house_prices_wards)[1] <- \"GSS_CODE\"\nwards@data <- join(wards@data, house_prices_wards)\nwards_Central <- wards[Central,]\nmean(wards_Central@data$Mean_GBP_2014, na.rm = TRUE)\navg_houseprice_along <- function(List){\n    avg_price <- data.frame(Line = List$Line_Name, avg_GBP_HousePrice2014 = 0, stringsAsFactors = FALSE)\n    for(i in 1:length(avg_price$Line)){\n        name <- avg_price[i,1]\n        wards_name <- wards[get(name),]\n        avg_price[i,2] <- mean(wards_name@data$Mean_GBP_2014, na.rm = TRUE)\n    }\n    return(avg_price)\n}\navg_houseprice_along(tube_lines)\n\n#\n\n",
    "created" : 1447861934720.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3014362696",
    "id" : "A40C61B8",
    "lastKnownWriteTime" : 1448276092,
    "path" : "~/CLOUD/C07_UCL_SmartCities/GIS/wk5/tube_shape/LondonTube.R",
    "project_path" : "tube_shape/LondonTube.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "type" : "r_source"
}